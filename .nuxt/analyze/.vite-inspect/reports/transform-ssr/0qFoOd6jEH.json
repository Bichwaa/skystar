{
  "resolvedId": "/home/bichwaa/Desktop/work/skystar/components/docs/Doc.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport Snippet from \"./Snippet.vue\";\nimport TsIcon from \"./icons/TsIcon.vue\";\nimport VueIcon from \"./icons/VueIcon.vue\";\nimport FolderIcon from \"./icons/FolderIcon.vue\";\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Doc',\n  __ssrInlineRender: true,\n  setup(__props) {\n\n\nreturn (_ctx: any,_push: any,_parent: any,_attrs: any) => {\n  _push(`<div${_ssrRenderAttrs(_mergeProps({ class: \"max-w-full py-8 text-black\" }, _attrs))}><h2 class=\"mb-10 text-3xl font-medium\">Documentation</h2><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">Features</h2><ul class=\"mt-4 list-disc pl-6\"><li class=\"mb-4\">Support of the active route (styled by default).</li><li class=\"mb-4\"> Fully customizable and without external dependencies. </li><li class=\"mb-4\"> No vendor lock-in, you can export it and integrate it in your project. </li><li> Sidebar can be aligned left or right according to your preferences (on mobile). </li></ul></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"mb-3 text-2xl font-medium\">File Structure</h2><div class=\"pl-2\"><div class=\"mb-3 flex pl-5\">`)\n  _push(_ssrRenderComponent(FolderIcon, { class: \"h-6 w-6\" }, null, _parent))\n  _push(`<span class=\"pl-2\">dashboard</span></div><div class=\"mb-3 flex pl-11\">`)\n  _push(_ssrRenderComponent(FolderIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">sidebar</span></div><div class=\"mb-3 flex pl-16\">`)\n  _push(_ssrRenderComponent(FolderIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">icons</span></div><div class=\"mb-3 flex pl-16\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">Sidebar.vue</span></div><div class=\"mb-3 flex pl-16\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">SidebarHeader.vue</span></div><div class=\"mb-3 flex pl-16\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">SidebarItem.vue</span></div><div class=\"mb-3 flex pl-16\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">SidebarItems.vue</span></div><div class=\"mb-3 flex pl-11\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">Layout.vue</span></div><div class=\"mb-3 flex pl-11\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">Overlay.vue</span></div><div class=\"mb-3 flex pl-11\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">TopBar.vue</span></div><div class=\"mb-3 flex pl-11\">`)\n  _push(_ssrRenderComponent(TsIcon, null, null, _parent))\n  _push(`<span class=\"pl-3\">store.ts</span></div></div></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">File Structure explained</h2><div class=\"mb-8 mt-4\"><div class=\"flex\">`)\n  _push(_ssrRenderComponent(FolderIcon, null, null, _parent))\n  _push(` <strong class=\"px-1\">sidebar</strong></div><div class=\"mt-4 flex flex-wrap pl-6 md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(FolderIcon, { class: \"h-7 w-7\" }, null, _parent))\n  _push(`<span class=\"px-2 font-medium\">icons</span> : <p class=\"pl-1\"> Icons used for each sidebar-item. You don&#39;t need this folder if you can provide your own icons. </p></div><div class=\"mt-4 flex flex-wrap pl-6 md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-2 font-medium\">Sidebar.vue</span> : <p class=\"pl-1\">responsable of the sidebar.</p><p class=\"pl-1\"> compose <strong>SidebarHeader</strong> and <strong>SidebarItems</strong> components. </p></div><div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-2 font-medium\">SidebarHeader.vue</span>: <p class=\"pl-1\">contains the logo displayed on top of the sidebar</p></div><div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-2 font-medium\">SidebarItem.vue</span> : <p class=\"pl-1\">represents each sidebar-item of the sidebar.</p></div><div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-2 font-medium\">SidebarItems.vue</span> : <p class=\"pl-1\">compose many SidebarItem components</p></div><div class=\"mt-8 flex flex-wrap pl-8\"><div>`)\n  _push(_ssrRenderComponent(Snippet, null, null, _parent))\n  _push(`</div></div></div><div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-1 font-medium\">Layout.vue :</span> contains the <strong class=\"px-1\">DashboardLayout</strong> component used as the layout of the application </div></div><div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-1 font-medium\">Overlay.vue :</span> displays an overlay that will only be visible on small screens to emphasize the focus on sidebar when it is open. it&#39;s also used to close sidebar on click outside </div></div><div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-1 font-medium\">TopBar.vue :</span> You can customize it or replace it with your own TopBar but don&#39;t forget to add a button to toggle sidebar on mobile </div></div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(TsIcon, { class: \"h-5 w-5\" }, null, _parent))\n  _push(`<span class=\"pl-3 font-medium\">store.ts</span> : <p class=\"pl-1\"> where all states for handling opening and closing sidebar are defined </p></div></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">Export</h2><p class=\"mt-4\"> As there is no vendor lock-in, if you already have a dashboard, you can copy the <strong class=\"px-1\">dashboard</strong>folder into your project </p><div class=\"mt-8\"><ul class=\"mt-4 list-disc pl-6\"><li class=\"mb-3\"> Add your routes in the <strong class=\"px-1\">dashboard/sidebar/SidebarItems.vue</strong> file </li><li class=\"mb-3\"> Replace your layout by the <strong class=\"px-1\">DashboardLayout</strong>component </li></ul></div></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">Customization</h2><p class=\"mt-5\"> You can customize everything according to your preferences if it doesn&#39;t suit you. What we have done is just provide a solid structure for better scalability and readability of the code. </p><p class=\"mt-5\"> The sidebar scrollbar is hidden by default but you can still scroll with the keyboards if you have several sidebar-items. </p><p class=\"mt-5\"> In the <strong> dashboard/Layout.vue</strong> file, <strong class=\"pl-1\">Sidebar</strong> component has as prop <strong class=\"pl-1\">mobile-orientation</strong>, which indicates the orientation of the sidebar on small devices (viewport ${_ssrInterpolate(\"<\")} 1024px). </p><p class=\"pt-5\">That prop can have two possible values :</p><ul class=\"mt-4 list-disc pl-6\"><li class=\"mb-3\"><strong>start :</strong> sidebar will be aligned to the left </li><li><strong>end :</strong> sidebar will be aligned to the right</li></ul></section></div>`)\n}\n}\n\n})",
      "start": 1709290883066,
      "end": 1709290883066,
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/bichwaa/Desktop/work/skystar/components/docs/Doc.vue"
        ],
        "sourcesContent": [
          "<script setup lang=\"ts\">\nimport Snippet from \"./Snippet.vue\";\nimport TsIcon from \"./icons/TsIcon.vue\";\nimport VueIcon from \"./icons/VueIcon.vue\";\nimport FolderIcon from \"./icons/FolderIcon.vue\";\n</script>\n\n<template>\n  <div class=\"max-w-full py-8 text-black\">\n    <h2 class=\"mb-10 text-3xl font-medium\">Documentation</h2>\n    <section class=\"mb-16 bg-white px-3 py-8 md:px-8\">\n      <h2 class=\"text-2xl font-medium\">Features</h2>\n      <ul class=\"mt-4 list-disc pl-6\">\n        <li class=\"mb-4\">Support of the active route (styled by default).</li>\n        <li class=\"mb-4\">\n          Fully customizable and without external dependencies.\n        </li>\n        <li class=\"mb-4\">\n          No vendor lock-in, you can export it and integrate it in your project.\n        </li>\n        <li>\n          Sidebar can be aligned left or right according to your preferences (on\n          mobile).\n        </li>\n      </ul>\n    </section>\n\n    <section class=\"mb-16 bg-white px-3 py-8 md:px-8\">\n      <h2 class=\"mb-3 text-2xl font-medium\">File Structure</h2>\n      <div class=\"pl-2\">\n        <div class=\"mb-3 flex pl-5\">\n          <FolderIcon class=\"h-6 w-6\" />\n          <span class=\"pl-2\">dashboard</span>\n        </div>\n        <div class=\"mb-3 flex pl-11\">\n          <FolderIcon />\n          <span class=\"pl-2\">sidebar</span>\n        </div>\n        <div class=\"mb-3 flex pl-16\">\n          <FolderIcon />\n          <span class=\"pl-2\">icons</span>\n        </div>\n        <div class=\"mb-3 flex pl-16\">\n          <VueIcon />\n          <span class=\"pl-2\">Sidebar.vue</span>\n        </div>\n        <div class=\"mb-3 flex pl-16\">\n          <VueIcon />\n          <span class=\"pl-2\">SidebarHeader.vue</span>\n        </div>\n        <div class=\"mb-3 flex pl-16\">\n          <VueIcon />\n          <span class=\"pl-2\">SidebarItem.vue</span>\n        </div>\n        <div class=\"mb-3 flex pl-16\">\n          <VueIcon />\n          <span class=\"pl-2\">SidebarItems.vue</span>\n        </div>\n        <div class=\"mb-3 flex pl-11\">\n          <VueIcon />\n          <span class=\"pl-2\">Layout.vue</span>\n        </div>\n        <div class=\"mb-3 flex pl-11\">\n          <VueIcon />\n          <span class=\"pl-2\">Overlay.vue</span>\n        </div>\n        <div class=\"mb-3 flex pl-11\">\n          <VueIcon />\n          <span class=\"pl-2\">TopBar.vue</span>\n        </div>\n        <div class=\"mb-3 flex pl-11\">\n          <TsIcon />\n          <span class=\"pl-3\">store.ts</span>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"mb-16 bg-white px-3 py-8 md:px-8\">\n      <h2 class=\"text-2xl font-medium\">File Structure explained</h2>\n\n      <div class=\"mb-8 mt-4\">\n        <div class=\"flex\">\n          <FolderIcon /> <strong class=\"px-1\">sidebar</strong>\n        </div>\n        <div class=\"mt-4 flex flex-wrap pl-6 md:flex-nowrap\">\n          <FolderIcon class=\"h-7 w-7\" />\n          <span class=\"px-2 font-medium\">icons</span> :\n          <p class=\"pl-1\">\n            Icons used for each sidebar-item. You don't need this folder if you\n            can provide your own icons.\n          </p>\n        </div>\n        <div class=\"mt-4 flex flex-wrap pl-6 md:flex-nowrap\">\n          <VueIcon /> <span class=\"px-2 font-medium\">Sidebar.vue</span> :\n          <p class=\"pl-1\">responsable of the sidebar.</p>\n          <p class=\"pl-1\">\n            compose <strong>SidebarHeader</strong> and\n            <strong>SidebarItems</strong> components.\n          </p>\n        </div>\n        <div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">\n          <VueIcon /> <span class=\"px-2 font-medium\">SidebarHeader.vue</span>:\n          <p class=\"pl-1\">contains the logo displayed on top of the sidebar</p>\n        </div>\n        <div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">\n          <VueIcon /> <span class=\"px-2 font-medium\">SidebarItem.vue</span> :\n          <p class=\"pl-1\">represents each sidebar-item of the sidebar.</p>\n        </div>\n        <div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">\n          <VueIcon /> <span class=\"px-2 font-medium\">SidebarItems.vue</span> :\n          <p class=\"pl-1\">compose many SidebarItem components</p>\n        </div>\n        <div class=\"mt-8 flex flex-wrap pl-8\">\n          <div>\n            <Snippet />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div class=\"mt-8 flex flex-wrap md:flex-nowrap\">\n          <VueIcon /> <span class=\"px-1 font-medium\">Layout.vue :</span>\n          contains the\n          <strong class=\"px-1\">DashboardLayout</strong>\n          component used as the layout of the application\n        </div>\n      </div>\n\n      <div>\n        <div class=\"mt-8 flex flex-wrap md:flex-nowrap\">\n          <VueIcon /> <span class=\"px-1 font-medium\">Overlay.vue :</span>\n          displays an overlay that will only be visible on small screens to\n          emphasize the focus on sidebar when it is open. it's also used to\n          close sidebar on click outside\n        </div>\n      </div>\n\n      <div>\n        <div class=\"mt-8 flex flex-wrap md:flex-nowrap\">\n          <VueIcon /> <span class=\"px-1 font-medium\">TopBar.vue :</span>\n          You can customize it or replace it with your own TopBar but don't\n          forget to add a button to toggle sidebar on mobile\n        </div>\n      </div>\n\n      <div class=\"mt-8 flex flex-wrap md:flex-nowrap\">\n        <TsIcon class=\"h-5 w-5\" />\n        <span class=\"pl-3 font-medium\">store.ts</span> :\n        <p class=\"pl-1\">\n          where all states for handling opening and closing sidebar are defined\n        </p>\n      </div>\n    </section>\n\n    <section class=\"mb-16 bg-white px-3 py-8 md:px-8\">\n      <h2 class=\"text-2xl font-medium\">Export</h2>\n      <p class=\"mt-4\">\n        As there is no vendor lock-in, if you already have a dashboard, you can\n        copy the\n        <strong class=\"px-1\">dashboard</strong>folder into your project\n      </p>\n      <div class=\"mt-8\">\n        <ul class=\"mt-4 list-disc pl-6\">\n          <li class=\"mb-3\">\n            Add your routes in the\n            <strong class=\"px-1\">dashboard/sidebar/SidebarItems.vue</strong>\n            file\n          </li>\n          <li class=\"mb-3\">\n            Replace your layout by the\n            <strong class=\"px-1\">DashboardLayout</strong>component\n          </li>\n        </ul>\n      </div>\n    </section>\n\n    <section class=\"mb-16 bg-white px-3 py-8 md:px-8\">\n      <h2 class=\"text-2xl font-medium\">Customization</h2>\n      <p class=\"mt-5\">\n        You can customize everything according to your preferences if it doesn't\n        suit you. What we have done is just provide a solid structure for better\n        scalability and readability of the code.\n      </p>\n      <p class=\"mt-5\">\n        The sidebar scrollbar is hidden by default but you can still scroll with\n        the keyboards if you have several sidebar-items.\n      </p>\n      <p class=\"mt-5\">\n        In the <strong> dashboard/Layout.vue</strong> file,\n        <strong class=\"pl-1\">Sidebar</strong> component has as prop\n        <strong class=\"pl-1\">mobile-orientation</strong>, which indicates the\n        orientation of the sidebar on small devices (viewport {{ \"<\" }} 1024px).\n      </p>\n      <p class=\"pt-5\">That prop can have two possible values :</p>\n      <ul class=\"mt-4 list-disc pl-6\">\n        <li class=\"mb-3\">\n          <strong>start :</strong> sidebar will be aligned to the left\n        </li>\n        <li><strong>end :</strong> sidebar will be aligned to the right</li>\n      </ul>\n    </section>\n  </div>\n</template>\n"
        ],
        "names": [],
        "mappings": ";;;;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;;AAJxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
      }
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709290883066,
      "end": 1709290883066,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709290883066,
      "end": 1709290883066,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709290883066,
      "end": 1709290883066,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709290883066,
      "end": 1709290883066,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709290883066,
      "end": 1709290883066,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709290883066,
      "end": 1709290883066,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { mergeProps as _mergeProps } from \"vue\";\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\";\nimport Snippet from \"./Snippet.vue\";\nimport TsIcon from \"./icons/TsIcon.vue\";\nimport VueIcon from \"./icons/VueIcon.vue\";\nimport FolderIcon from \"./icons/FolderIcon.vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Doc\",\n  __ssrInlineRender: true,\n  setup(__props) {\n    return (_ctx, _push, _parent, _attrs) => {\n      _push(`<div${_ssrRenderAttrs(_mergeProps({ class: \"max-w-full py-8 text-black\" }, _attrs))}><h2 class=\"mb-10 text-3xl font-medium\">Documentation</h2><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">Features</h2><ul class=\"mt-4 list-disc pl-6\"><li class=\"mb-4\">Support of the active route (styled by default).</li><li class=\"mb-4\"> Fully customizable and without external dependencies. </li><li class=\"mb-4\"> No vendor lock-in, you can export it and integrate it in your project. </li><li> Sidebar can be aligned left or right according to your preferences (on mobile). </li></ul></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"mb-3 text-2xl font-medium\">File Structure</h2><div class=\"pl-2\"><div class=\"mb-3 flex pl-5\">`);\n      _push(_ssrRenderComponent(FolderIcon, { class: \"h-6 w-6\" }, null, _parent));\n      _push(`<span class=\"pl-2\">dashboard</span></div><div class=\"mb-3 flex pl-11\">`);\n      _push(_ssrRenderComponent(FolderIcon, null, null, _parent));\n      _push(`<span class=\"pl-2\">sidebar</span></div><div class=\"mb-3 flex pl-16\">`);\n      _push(_ssrRenderComponent(FolderIcon, null, null, _parent));\n      _push(`<span class=\"pl-2\">icons</span></div><div class=\"mb-3 flex pl-16\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(`<span class=\"pl-2\">Sidebar.vue</span></div><div class=\"mb-3 flex pl-16\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(`<span class=\"pl-2\">SidebarHeader.vue</span></div><div class=\"mb-3 flex pl-16\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(`<span class=\"pl-2\">SidebarItem.vue</span></div><div class=\"mb-3 flex pl-16\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(`<span class=\"pl-2\">SidebarItems.vue</span></div><div class=\"mb-3 flex pl-11\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(`<span class=\"pl-2\">Layout.vue</span></div><div class=\"mb-3 flex pl-11\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(`<span class=\"pl-2\">Overlay.vue</span></div><div class=\"mb-3 flex pl-11\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(`<span class=\"pl-2\">TopBar.vue</span></div><div class=\"mb-3 flex pl-11\">`);\n      _push(_ssrRenderComponent(TsIcon, null, null, _parent));\n      _push(`<span class=\"pl-3\">store.ts</span></div></div></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">File Structure explained</h2><div class=\"mb-8 mt-4\"><div class=\"flex\">`);\n      _push(_ssrRenderComponent(FolderIcon, null, null, _parent));\n      _push(` <strong class=\"px-1\">sidebar</strong></div><div class=\"mt-4 flex flex-wrap pl-6 md:flex-nowrap\">`);\n      _push(_ssrRenderComponent(FolderIcon, { class: \"h-7 w-7\" }, null, _parent));\n      _push(`<span class=\"px-2 font-medium\">icons</span> : <p class=\"pl-1\"> Icons used for each sidebar-item. You don&#39;t need this folder if you can provide your own icons. </p></div><div class=\"mt-4 flex flex-wrap pl-6 md:flex-nowrap\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(` <span class=\"px-2 font-medium\">Sidebar.vue</span> : <p class=\"pl-1\">responsable of the sidebar.</p><p class=\"pl-1\"> compose <strong>SidebarHeader</strong> and <strong>SidebarItems</strong> components. </p></div><div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(` <span class=\"px-2 font-medium\">SidebarHeader.vue</span>: <p class=\"pl-1\">contains the logo displayed on top of the sidebar</p></div><div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(` <span class=\"px-2 font-medium\">SidebarItem.vue</span> : <p class=\"pl-1\">represents each sidebar-item of the sidebar.</p></div><div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(` <span class=\"px-2 font-medium\">SidebarItems.vue</span> : <p class=\"pl-1\">compose many SidebarItem components</p></div><div class=\"mt-8 flex flex-wrap pl-8\"><div>`);\n      _push(_ssrRenderComponent(Snippet, null, null, _parent));\n      _push(`</div></div></div><div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(` <span class=\"px-1 font-medium\">Layout.vue :</span> contains the <strong class=\"px-1\">DashboardLayout</strong> component used as the layout of the application </div></div><div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(` <span class=\"px-1 font-medium\">Overlay.vue :</span> displays an overlay that will only be visible on small screens to emphasize the focus on sidebar when it is open. it&#39;s also used to close sidebar on click outside </div></div><div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`);\n      _push(_ssrRenderComponent(VueIcon, null, null, _parent));\n      _push(` <span class=\"px-1 font-medium\">TopBar.vue :</span> You can customize it or replace it with your own TopBar but don&#39;t forget to add a button to toggle sidebar on mobile </div></div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`);\n      _push(_ssrRenderComponent(TsIcon, { class: \"h-5 w-5\" }, null, _parent));\n      _push(`<span class=\"pl-3 font-medium\">store.ts</span> : <p class=\"pl-1\"> where all states for handling opening and closing sidebar are defined </p></div></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">Export</h2><p class=\"mt-4\"> As there is no vendor lock-in, if you already have a dashboard, you can copy the <strong class=\"px-1\">dashboard</strong>folder into your project </p><div class=\"mt-8\"><ul class=\"mt-4 list-disc pl-6\"><li class=\"mb-3\"> Add your routes in the <strong class=\"px-1\">dashboard/sidebar/SidebarItems.vue</strong> file </li><li class=\"mb-3\"> Replace your layout by the <strong class=\"px-1\">DashboardLayout</strong>component </li></ul></div></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">Customization</h2><p class=\"mt-5\"> You can customize everything according to your preferences if it doesn&#39;t suit you. What we have done is just provide a solid structure for better scalability and readability of the code. </p><p class=\"mt-5\"> The sidebar scrollbar is hidden by default but you can still scroll with the keyboards if you have several sidebar-items. </p><p class=\"mt-5\"> In the <strong> dashboard/Layout.vue</strong> file, <strong class=\"pl-1\">Sidebar</strong> component has as prop <strong class=\"pl-1\">mobile-orientation</strong>, which indicates the orientation of the sidebar on small devices (viewport ${_ssrInterpolate(\"<\")} 1024px). </p><p class=\"pt-5\">That prop can have two possible values :</p><ul class=\"mt-4 list-disc pl-6\"><li class=\"mb-3\"><strong>start :</strong> sidebar will be aligned to the left </li><li><strong>end :</strong> sidebar will be aligned to the right</li></ul></section></div>`);\n    };\n  }\n});\n",
      "start": 1709290883066,
      "end": 1709290883106,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/bichwaa/Desktop/work/skystar/components/docs/Doc.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport Snippet from \"./Snippet.vue\";\nimport TsIcon from \"./icons/TsIcon.vue\";\nimport VueIcon from \"./icons/VueIcon.vue\";\nimport FolderIcon from \"./icons/FolderIcon.vue\";\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Doc',\n  __ssrInlineRender: true,\n  setup(__props) {\n\n\nreturn (_ctx: any,_push: any,_parent: any,_attrs: any) => {\n  _push(`<div${_ssrRenderAttrs(_mergeProps({ class: \"max-w-full py-8 text-black\" }, _attrs))}><h2 class=\"mb-10 text-3xl font-medium\">Documentation</h2><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">Features</h2><ul class=\"mt-4 list-disc pl-6\"><li class=\"mb-4\">Support of the active route (styled by default).</li><li class=\"mb-4\"> Fully customizable and without external dependencies. </li><li class=\"mb-4\"> No vendor lock-in, you can export it and integrate it in your project. </li><li> Sidebar can be aligned left or right according to your preferences (on mobile). </li></ul></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"mb-3 text-2xl font-medium\">File Structure</h2><div class=\"pl-2\"><div class=\"mb-3 flex pl-5\">`)\n  _push(_ssrRenderComponent(FolderIcon, { class: \"h-6 w-6\" }, null, _parent))\n  _push(`<span class=\"pl-2\">dashboard</span></div><div class=\"mb-3 flex pl-11\">`)\n  _push(_ssrRenderComponent(FolderIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">sidebar</span></div><div class=\"mb-3 flex pl-16\">`)\n  _push(_ssrRenderComponent(FolderIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">icons</span></div><div class=\"mb-3 flex pl-16\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">Sidebar.vue</span></div><div class=\"mb-3 flex pl-16\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">SidebarHeader.vue</span></div><div class=\"mb-3 flex pl-16\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">SidebarItem.vue</span></div><div class=\"mb-3 flex pl-16\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">SidebarItems.vue</span></div><div class=\"mb-3 flex pl-11\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">Layout.vue</span></div><div class=\"mb-3 flex pl-11\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">Overlay.vue</span></div><div class=\"mb-3 flex pl-11\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(`<span class=\"pl-2\">TopBar.vue</span></div><div class=\"mb-3 flex pl-11\">`)\n  _push(_ssrRenderComponent(TsIcon, null, null, _parent))\n  _push(`<span class=\"pl-3\">store.ts</span></div></div></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">File Structure explained</h2><div class=\"mb-8 mt-4\"><div class=\"flex\">`)\n  _push(_ssrRenderComponent(FolderIcon, null, null, _parent))\n  _push(` <strong class=\"px-1\">sidebar</strong></div><div class=\"mt-4 flex flex-wrap pl-6 md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(FolderIcon, { class: \"h-7 w-7\" }, null, _parent))\n  _push(`<span class=\"px-2 font-medium\">icons</span> : <p class=\"pl-1\"> Icons used for each sidebar-item. You don&#39;t need this folder if you can provide your own icons. </p></div><div class=\"mt-4 flex flex-wrap pl-6 md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-2 font-medium\">Sidebar.vue</span> : <p class=\"pl-1\">responsable of the sidebar.</p><p class=\"pl-1\"> compose <strong>SidebarHeader</strong> and <strong>SidebarItems</strong> components. </p></div><div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-2 font-medium\">SidebarHeader.vue</span>: <p class=\"pl-1\">contains the logo displayed on top of the sidebar</p></div><div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-2 font-medium\">SidebarItem.vue</span> : <p class=\"pl-1\">represents each sidebar-item of the sidebar.</p></div><div class=\"mt-6 flex flex-wrap pl-6 md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-2 font-medium\">SidebarItems.vue</span> : <p class=\"pl-1\">compose many SidebarItem components</p></div><div class=\"mt-8 flex flex-wrap pl-8\"><div>`)\n  _push(_ssrRenderComponent(Snippet, null, null, _parent))\n  _push(`</div></div></div><div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-1 font-medium\">Layout.vue :</span> contains the <strong class=\"px-1\">DashboardLayout</strong> component used as the layout of the application </div></div><div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-1 font-medium\">Overlay.vue :</span> displays an overlay that will only be visible on small screens to emphasize the focus on sidebar when it is open. it&#39;s also used to close sidebar on click outside </div></div><div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(VueIcon, null, null, _parent))\n  _push(` <span class=\"px-1 font-medium\">TopBar.vue :</span> You can customize it or replace it with your own TopBar but don&#39;t forget to add a button to toggle sidebar on mobile </div></div><div class=\"mt-8 flex flex-wrap md:flex-nowrap\">`)\n  _push(_ssrRenderComponent(TsIcon, { class: \"h-5 w-5\" }, null, _parent))\n  _push(`<span class=\"pl-3 font-medium\">store.ts</span> : <p class=\"pl-1\"> where all states for handling opening and closing sidebar are defined </p></div></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">Export</h2><p class=\"mt-4\"> As there is no vendor lock-in, if you already have a dashboard, you can copy the <strong class=\"px-1\">dashboard</strong>folder into your project </p><div class=\"mt-8\"><ul class=\"mt-4 list-disc pl-6\"><li class=\"mb-3\"> Add your routes in the <strong class=\"px-1\">dashboard/sidebar/SidebarItems.vue</strong> file </li><li class=\"mb-3\"> Replace your layout by the <strong class=\"px-1\">DashboardLayout</strong>component </li></ul></div></section><section class=\"mb-16 bg-white px-3 py-8 md:px-8\"><h2 class=\"text-2xl font-medium\">Customization</h2><p class=\"mt-5\"> You can customize everything according to your preferences if it doesn&#39;t suit you. What we have done is just provide a solid structure for better scalability and readability of the code. </p><p class=\"mt-5\"> The sidebar scrollbar is hidden by default but you can still scroll with the keyboards if you have several sidebar-items. </p><p class=\"mt-5\"> In the <strong> dashboard/Layout.vue</strong> file, <strong class=\"pl-1\">Sidebar</strong> component has as prop <strong class=\"pl-1\">mobile-orientation</strong>, which indicates the orientation of the sidebar on small devices (viewport ${_ssrInterpolate(\"<\")} 1024px). </p><p class=\"pt-5\">That prop can have two possible values :</p><ul class=\"mt-4 list-disc pl-6\"><li class=\"mb-3\"><strong>start :</strong> sidebar will be aligned to the left </li><li><strong>end :</strong> sidebar will be aligned to the right</li></ul></section></div>`)\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AACpD,SAAS,cAAc,mBAAmB;AAC1C,SAAS,sBAAsB,qBAAqB,kBAAkB,iBAAiB,kBAAkB,uBAAuB;AAEhI,OAAO,aAAa;AACpB,OAAO,YAAY;AACnB,OAAO,aAAa;AACpB,OAAO,gBAAgB;AAEvB,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,mBAAmB;AAAA,EACnB,MAAM,SAAS;AAGjB,WAAO,CAAC,MAAU,OAAW,SAAa,WAAgB;AACxD,YAAM,OAAO,gBAAgB,YAAY,EAAE,OAAO,6BAA6B,GAAG,MAAM,CAAC,CAAC,+qBAA+qB;AACzwB,YAAM,oBAAoB,YAAY,EAAE,OAAO,UAAU,GAAG,MAAM,OAAO,CAAC;AAC1E,YAAM,wEAAwE;AAC9E,YAAM,oBAAoB,YAAY,MAAM,MAAM,OAAO,CAAC;AAC1D,YAAM,sEAAsE;AAC5E,YAAM,oBAAoB,YAAY,MAAM,MAAM,OAAO,CAAC;AAC1D,YAAM,oEAAoE;AAC1E,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,0EAA0E;AAChF,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,gFAAgF;AACtF,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,8EAA8E;AACpF,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,+EAA+E;AACrF,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,yEAAyE;AAC/E,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,0EAA0E;AAChF,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,yEAAyE;AAC/E,YAAM,oBAAoB,QAAQ,MAAM,MAAM,OAAO,CAAC;AACtD,YAAM,mNAAmN;AACzN,YAAM,oBAAoB,YAAY,MAAM,MAAM,OAAO,CAAC;AAC1D,YAAM,mGAAmG;AACzG,YAAM,oBAAoB,YAAY,EAAE,OAAO,UAAU,GAAG,MAAM,OAAO,CAAC;AAC1E,YAAM,oOAAoO;AAC1O,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,2QAA2Q;AACjR,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,4LAA4L;AAClM,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,sLAAsL;AAC5L,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,oKAAoK;AAC1K,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,yEAAyE;AAC/E,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,kOAAkO;AACxO,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,+RAA+R;AACrS,YAAM,oBAAoB,SAAS,MAAM,MAAM,OAAO,CAAC;AACvD,YAAM,2OAA2O;AACjP,YAAM,oBAAoB,QAAQ,EAAE,OAAO,UAAU,GAAG,MAAM,OAAO,CAAC;AACtE,YAAM,44CAA44C,gBAAgB,GAAG,CAAC,wRAAwR;AAAA,IAChsD;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1709290883106,
      "end": 1709290883106,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709290883106,
      "end": 1709290883106,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709290883106,
      "end": 1709290883106,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709290883106,
      "end": 1709290883106,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709290883106,
      "end": 1709290883108,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709290883106,
      "end": 1709290883108,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709290883108,
      "end": 1709290883108,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709290883108,
      "end": 1709290883108,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709290883108,
      "end": 1709290883108,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709290883108,
      "end": 1709290883108,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709290883108,
      "end": 1709290883109,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709290883109,
      "end": 1709290883109,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709290883109,
      "end": 1709290883109,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709290883109,
      "end": 1709290883109,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709290883109,
      "end": 1709290883109,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709290883109,
      "end": 1709290883109,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709290883114,
      "end": 1709290883114,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709290883114,
      "end": 1709290883114,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709290883114,
      "end": 1709290883114,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709290883119,
      "end": 1709290883119,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709290883119,
      "end": 1709290883119,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709290883119,
      "end": 1709290883121,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709290883119,
      "end": 1709290883121,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709290883121,
      "end": 1709290883122,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709290883121,
      "end": 1709290883122,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709290883122,
      "end": 1709290883122,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709290883122,
      "end": 1709290883122,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1709290883122,
      "end": 1709290883122,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709290883122,
      "end": 1709290883122,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709290883122,
      "end": 1709290883122,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709290883122,
      "end": 1709290883122,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709290883122,
      "end": 1709290883122,
      "order": "normal"
    }
  ]
}
